// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  password String
  bids     Bid[]
  auctions Auction[]
}

model Bid {
  id         Int     @id @default(autoincrement())
  price      Int
  time       DateTime
  bidderName String // Here I decide to break normalization in order to avoid joins on real time queries.
  auction    Auction @relation(fields: [auctionId], references: [id])
  auctionId  Int
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
}

model Auction {
  id            Int      @id @default(autoincrement())
  image         String
  title         String
  description   String
  currentPrice  Int
  startingPrice Int
  createdAt     DateTime
  updatedAt     DateTime
  endTime       DateTime
  bids          Bid[]
  user          User @relation(fields: [userId], references: [id])
  userId        Int
}
